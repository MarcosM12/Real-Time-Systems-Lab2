/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class SplitterLine */

#ifndef _Included_SplitterLine
#define _Included_SplitterLine
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     SplitterLine
 * Method:    initializeHardwarePorts
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_SplitterLine_initializeHardwarePorts
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    cylinder2MoveForward
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_SplitterLine_cylinder2MoveForward
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    cylinder2MoveBackward
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_SplitterLine_cylinder2MoveBackward
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    cylinder2Stop
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_SplitterLine_cylinder2Stop
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    cylinder1MoveForward
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_SplitterLine_cylinder1MoveForward
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    cylinder1MoveBackward
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_SplitterLine_cylinder1MoveBackward
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    cylinder1Stop
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_SplitterLine_cylinder1Stop
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    cylinder3MoveForward
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_SplitterLine_cylinder3MoveForward
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    cylinder3MoveBackward
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_SplitterLine_cylinder3MoveBackward
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    cylinder3Stop
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_SplitterLine_cylinder3Stop
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    conveyorMove
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_SplitterLine_conveyorMove
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    conveyorStop
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_SplitterLine_conveyorStop
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    getCylinder1Position
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_SplitterLine_getCylinder1Position
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    getCylinder2Position
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_SplitterLine_getCylinder2Position
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    getCylinder3Position
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_SplitterLine_getCylinder3Position
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    getIdentificationSensor1
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_SplitterLine_getIdentificationSensor1
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    getIdentificationSensor2
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_SplitterLine_getIdentificationSensor2
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    getSwitch1state
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_SplitterLine_getSwitch1state
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    getSwitch2state
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_SplitterLine_getSwitch2state
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    getSwitch3state
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_SplitterLine_getSwitch3state
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    getHeadsensor1
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_SplitterLine_getHeadsensor1
  (JNIEnv *, jclass);

/*
 * Class:     SplitterLine
 * Method:    getHeadsensor2
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_SplitterLine_getHeadsensor2
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
